- title: Basic Demo
  entries:
    - title: Hello Audio Worklet!
      description: Bypassing input to output
      href: basic/hello-audio-worklet/
    - title: One Pole Filter
      description: One-pole filter built with Audio Worklet
      href: basic/one-pole-filter/
    - title: Noise Generator with AudioParam
      description: Noise generator with user-defined AudioParam
      href: basic/noise-generator/
    - title: BitCrusher with AudioParam
      description: Declative AudioParam configuration and its automation
      href: basic/bit-crusher/
    - title: MessagePort
      description: Messaging between an AudioWorkletNode and the associated
        AudioWorkletProcessor
      href: basic/message-port/
    - title: Volume Meter
      description: Measures microphone volume with AudioWorkletProcessor
      href: basic/volume-meter/
    - title: AudioWorkletNode Options
      description: Passing AudioWorkletNodeOptions from the node to the
        associated AudioWorkletProcessor
      href: basic/audio-worklet-node-options/
    - title: Handling Errors
      description: How to handle errors from AudioWorkletProcessor
      href: basic/handling-errors/

- title: Advanced Design Pattern
  entries:
    - title: Audio Worklet and WebAssembly
      description: A basic set up for AudioWorklet and WebAssembly
      href: design-pattern/wasm/
    - title: WebAssembly Supersaw
      description: C++ Supersaw synth to WebAssembly (Google I/O 2019, Audio 
        Developer Conference 2021)
      href: design-pattern/wasm-supersaw/
    - title: Ring Buffer in AudioWorkletProcessor
      description: Using Ring Buffer to work around buffer size mismatch
      href: design-pattern/wasm-ring-buffer/
    - title: Audio Worklet, SharedArrayBuffer, and Worker
      description: For high performance large-scale audio applications
      href: design-pattern/shared-buffer/

- title: FreeQueue
  entries:
    - title: Simple Passthrough
      description: Basic example of FreeQueue and a worker thread.
        FreeQueue is a lock-free ring buffer library for high-performance 
        audio processing designed to be used on top of the Web Audio API.
        This example demonstrates how this library can be used as a channel
        between a worker thread and AudioWorklet to send audio data.
      href: free-queue/examples/simple-passthrough/
    - title: Using FreeQueue with WebAssembly
      description: An example demonstrates the usage of FreeQueue with 
        WebAssembly. It includes an external C/C++ MP3 decoder library to 
        load and play music with FreeQueue on top of AudioWorklet.
      href: free-queue/examples/hello-webassembly/

- title: Migration from ScriptProcessorNode
  entries: 
    - title: ScriptProcessorNode Recorder
      description: A simple audio recording app using ScriptProcessorNode 
      href: migration/spn-recorder/
    - title: AudioWorklet Recorder
      description: A simple audio recording app using AudioWorklet
      href: migration/worklet-recorder/

- title: Resources
  entries:
    - title: Enter AudioWorklet
      description: An introductory article on Audio Worklet
      href: https://developer.chrome.com/blog/audio-worklet/
    - title: AudioWorklet Design Pattern
      description: Design with WebAssembly SharedArrayBuffer and more
      href: https://developer.chrome.com/blog/audio-worklet-design-pattern/
    - title: AudioWorklet - The future of web audio
      description: The first conference paper about AudioWorklet (ICMC 2018)
      href: https://hoch.io/assets/publications/icmc-2018-choi-audioworklet.pdf
